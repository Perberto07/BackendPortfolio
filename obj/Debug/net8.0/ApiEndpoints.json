[
  {
    "ContainingType": "Backend.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EventApp.Shared.DTOs.Auth.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AuthController",
    "Method": "Registeruser",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EventApp.Shared.DTOs.Auth.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ContentController",
    "Method": "CreateContent",
    "RelativePath": "api/Content/create-content",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "NETReact.Shared.DTOs.ContentDto.CreateContentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ContentController",
    "Method": "GetProject",
    "RelativePath": "api/Content/get-content",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.NewsController",
    "Method": "GetNews",
    "RelativePath": "api/News",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ProjectController",
    "Method": "UpdateProject",
    "RelativePath": "api/Project/{projectId}/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "NETReact.Shared.DTOs.ProjectDtos.CreateProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ProjectController",
    "Method": "CreateProject",
    "RelativePath": "api/Project/create-project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "NETReact.Shared.DTOs.ProjectDtos.CreateProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ProjectController",
    "Method": "GetProject",
    "RelativePath": "api/Project/Get-Project",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.WeatherController",
    "Method": "GetWeather",
    "RelativePath": "api/Weather/current",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "lat",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "lon",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.WeatherForecast, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]